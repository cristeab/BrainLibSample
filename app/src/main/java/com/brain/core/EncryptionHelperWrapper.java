/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.brain.core;

public class EncryptionHelperWrapper {
  public static SWIGTYPE_p_std__tupleT_std__string_std__string_t getKeysPair() {
    return new SWIGTYPE_p_std__tupleT_std__string_std__string_t(EncryptionHelperWrapperJNI.getKeysPair(), true);
  }

  public static String getPublicKey(SWIGTYPE_p_std__tupleT_std__string_std__string_t pair) {
    return EncryptionHelperWrapperJNI.getPublicKey(SWIGTYPE_p_std__tupleT_std__string_std__string_t.getCPtr(pair));
  }

  public static String getPrivateKey(SWIGTYPE_p_std__tupleT_std__string_std__string_t pair) {
    return EncryptionHelperWrapperJNI.getPrivateKey(SWIGTYPE_p_std__tupleT_std__string_std__string_t.getCPtr(pair));
  }

  public static SWIGTYPE_p_std__vectorT_uint8_t_t encryptAsymmetric(String payload, String publicKey) {
    return new SWIGTYPE_p_std__vectorT_uint8_t_t(EncryptionHelperWrapperJNI.encryptAsymmetric(payload, publicKey), true);
  }

  public static String decryptAsymmetric(SWIGTYPE_p_std__vectorT_uint8_t_t encryptedPayload, String privateKey) {
    return EncryptionHelperWrapperJNI.decryptAsymmetric(SWIGTYPE_p_std__vectorT_uint8_t_t.getCPtr(encryptedPayload), privateKey);
  }

  public static SWIGTYPE_p_std__vectorT_uint8_t_t createSignature(String payload, String privateKey) {
    return new SWIGTYPE_p_std__vectorT_uint8_t_t(EncryptionHelperWrapperJNI.createSignature(payload, privateKey), true);
  }

  public static boolean verifySignature(String payload, SWIGTYPE_p_std__vectorT_uint8_t_t signature, String publicKey) {
    return EncryptionHelperWrapperJNI.verifySignature(payload, SWIGTYPE_p_std__vectorT_uint8_t_t.getCPtr(signature), publicKey);
  }

  public static String getCipherKey() {
    return EncryptionHelperWrapperJNI.getCipherKey();
  }

  public static SWIGTYPE_p_std__vectorT_uint8_t_t encryptSymmetric(String payload, String key) {
    return new SWIGTYPE_p_std__vectorT_uint8_t_t(EncryptionHelperWrapperJNI.encryptSymmetric(payload, key), true);
  }

  public static String decryptSymmetric(SWIGTYPE_p_std__vectorT_uint8_t_t encryptedPayload, String key) {
    return EncryptionHelperWrapperJNI.decryptSymmetric(SWIGTYPE_p_std__vectorT_uint8_t_t.getCPtr(encryptedPayload), key);
  }

}
